openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/partner/state/:
    get:
      operationId: listShops
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        name:
                          type: string
                          maxLength: 100
                        state:
                          type: boolean
                      required:
                      - name
          description: ''
    post:
      operationId: createShop
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id001
              properties:
                name:
                  type: string
                  maxLength: 100
                state:
                  type: boolean
              required:
              - name
          application/x-www-form-urlencoded:
            schema: *id001
          multipart/form-data:
            schema: *id001
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  state:
                    type: boolean
                required:
                - name
          description: ''
  /api/v1/partner/state/get/:
    get:
      operationId: RetrieveShop
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  state:
                    type: boolean
                required:
                - name
          description: ''
  /api/v1/partner/state/{id}/:
    get:
      operationId: retrieveShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041C\u0430\u0433\u0430\
          \u0437\u0438\u043D."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  state:
                    type: boolean
                required:
                - name
          description: ''
    put:
      operationId: updateShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041C\u0430\u0433\u0430\
          \u0437\u0438\u043D."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id002
              properties:
                name:
                  type: string
                  maxLength: 100
                state:
                  type: boolean
              required:
              - name
          application/x-www-form-urlencoded:
            schema: *id002
          multipart/form-data:
            schema: *id002
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  state:
                    type: boolean
                required:
                - name
          description: ''
    patch:
      operationId: partial_updateShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041C\u0430\u0433\u0430\
          \u0437\u0438\u043D."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id003
              properties:
                name:
                  type: string
                  maxLength: 100
                state:
                  type: boolean
          application/x-www-form-urlencoded:
            schema: *id003
          multipart/form-data:
            schema: *id003
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  state:
                    type: boolean
                required:
                - name
          description: ''
    delete:
      operationId: destroyShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041C\u0430\u0433\u0430\
          \u0437\u0438\u043D."
        schema:
          type: string
      responses:
        '204':
          description: ''
  /api/v1/partner/orders:
    get:
      operationId: listPartnerOrders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/v1/user/details:
    get:
      operationId: listAccountDetails
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateAccountDetails
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/contact:
    get:
      operationId: listContacts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateContact
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    put:
      operationId: UpdateContact
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    delete:
      operationId: DestroyContact
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
  /api/v1/categories:
    get:
      operationId: listCategorys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        name:
                          type: string
                          maxLength: 50
                      required:
                      - name
          description: ''
  /api/v1/shops:
    get:
      operationId: listShops
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        name:
                          type: string
                          maxLength: 100
                        state:
                          type: boolean
                      required:
                      - name
          description: ''
  /api/v1/products:
    get:
      operationId: listProductInfos
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/v1/basket:
    get:
      operationId: listBaskets
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateBasket
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    put:
      operationId: UpdateBasket
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    delete:
      operationId: DestroyBasket
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
  /api/v1/order:
    get:
      operationId: listOrders
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateOrder
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/partner/update:
    post:
      operationId: CreatePartnerUpdate
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/partner/state/{id}/post/:
    post:
      operationId: CreateShop
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041C\u0430\u0433\u0430\
          \u0437\u0438\u043D."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id004
              properties:
                name:
                  type: string
                  maxLength: 100
                state:
                  type: boolean
              required:
              - name
          application/x-www-form-urlencoded:
            schema: *id004
          multipart/form-data:
            schema: *id004
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 100
                  state:
                    type: boolean
                required:
                - name
          description: ''
  /api/v1/user/register:
    post:
      operationId: CreateUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/register/confirm:
    post:
      operationId: CreateConfirmAccount
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/login:
    post:
      operationId: CreateLoginAccount
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/password_reset:
    post:
      operationId: CreateEmail
      description: 'An Api View which provides a method to request a password reset
        token based on an e-mail address


        Sends a signal reset_password_token_created when a reset token was created'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id005
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
          application/x-www-form-urlencoded:
            schema: *id005
          multipart/form-data:
            schema: *id005
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: string
                    format: email
                required:
                - email
          description: ''
  /api/v1/user/password_reset/confirm:
    post:
      operationId: CreatePasswordToken
      description: An Api View which provides a method to reset a password based on
        a unique token
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id006
              properties:
                password:
                  type: string
                token:
                  type: string
              required:
              - password
              - token
          application/x-www-form-urlencoded:
            schema: *id006
          multipart/form-data:
            schema: *id006
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  password:
                    type: string
                  token:
                    type: string
                required:
                - password
                - token
          description: ''
